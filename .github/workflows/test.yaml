name: Test

on:
  pull_request: {}

jobs:
  static:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: taiki-e/install-action@v2
        with:
          tool: taplo-cli@0.9.3

      - uses: Swatinem/rust-cache@v2

      - name: Toml format
        run: make static-toml

      - name: Format
        run: make fmt

      - name: Lint
        run: make clippy

      - name: Doc
        run: make doc

  test:
    needs: static
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2

      - name: Build
        run: make build

      - name: Test
        run: make test

  test-windows:
    needs: static
    strategy:
      matrix:
        os: [windows-latest]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2

      - uses: johnwason/vcpkg-action@v6
        with:
          triplet: x64-windows-release
          token: ${{ github.token }}
          manifest-dir: ${{ github.workspace }}/.github/manifest
          github-binarycache: true

      - name: Build
        run: |-
          $env:SODIUM_LIB_DIR="$(pwd)\vcpkg\packages\libsodium_x64-windows-release\lib"
          make build

      - name: Test
        run: |-
          $env:SODIUM_LIB_DIR="$(pwd)\vcpkg\packages\libsodium_x64-windows-release\lib"
          make test

  nix-build:
    needs: static
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, macos-latest, macos-13]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v30

      - uses: cachix/cachix-action@v15
        with:
          name: holochain-wind-tunnel
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - run: nix build --verbose -L .#bootstrap-srv

  docker-build:
    needs: static
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: docker buildx build .

  ci_pass:
    if: ${{ always() }}
    runs-on: "ubuntu-latest"
    needs:
      - static
      - test
      - test-windows
      - nix-build
    steps:
      - name: check status
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
